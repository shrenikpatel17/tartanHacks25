(()=>{"use strict";const n=document.createElement("style");n.textContent="\n.text-extractor-button {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  z-index: 10000;\n  padding: 10px 20px;\n  background-color: #2196F3;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  box-shadow: 0 2px 5px rgba(0,0,0,0.2);\n}\n\n.text-extractor-modal {\n  display: none;\n  position: fixed;\n  bottom: 80px;\n  right: 20px;\n  width: 300px;\n  max-height: 400px;\n  background-color: white;\n  border-radius: 5px;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n  z-index: 10000;\n  padding: 15px;\n  overflow-y: auto;\n}\n\n.text-extractor-modal.show {\n  display: block;\n}\n\n.text-extractor-close {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.icon-button {\n  position: fixed;\n  right: 20px;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: #2196F3;\n  color: white;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 2px 5px rgba(0,0,0,0.2);\n  z-index: 10000;\n}\n\n.chat-button {\n  bottom: 140px;\n}\n\n.menu-button {\n  bottom: 80px;\n}\n\n.menu-modal {\n  display: none;\n  position: fixed;\n  bottom: 140px;\n  right: 20px;\n  width: 200px;\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n  z-index: 9999;\n  overflow: hidden;\n}\n\n.menu-modal.show {\n  display: block;\n}\n\n.menu-header {\n  background-color: #1976D2;\n  color: white;\n  padding: 10px;\n  text-align: center;\n  font-weight: bold;\n}\n\n.menu-button-container {\n  padding: 10px;\n}\n\n.menu-option {\n  width: 100%;\n  padding: 10px;\n  margin: 5px 0;\n  border: none;\n  background-color: #E3F2FD;\n  border-radius: 5px;\n  cursor: pointer;\n  text-align: left;\n  transition: background-color 0.2s;\n}\n\n.menu-option:hover {\n  background-color: #BBDEFB;\n}\n\n.word-bank-modal {\n  display: none;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 80%;\n  max-width: 600px;\n  max-height: 80vh;\n  background-color: white;\n  border-radius: 15px;\n  box-shadow: 0 4px 20px rgba(0,0,0,0.15);\n  z-index: 10002;\n  overflow: hidden;\n}\n\n.word-bank-modal.show {\n  display: block;\n}\n\n.word-bank-header {\n  background-color: #1976D2;\n  color: white;\n  padding: 20px;\n  font-size: 1.5em;\n  font-weight: bold;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.word-bank-close {\n  cursor: pointer;\n  font-size: 1.5em;\n  color: white;\n}\n\n.word-bank-content {\n  padding: 20px;\n  overflow-y: auto;\n  max-height: calc(80vh - 80px);\n}\n\n.word-bank-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 15px;\n  padding: 10px;\n}\n\n.word-pair {\n  background: #E3F2FD;\n  border-radius: 10px;\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  transition: transform 0.2s;\n}\n\n.word-pair:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n}\n\n.original-word {\n  color: #666;\n  font-size: 0.9em;\n  margin-bottom: 5px;\n}\n\n.translated-word-display {\n  background-color: #4CAF50;\n  color: white;\n  padding: 2px 6px;\n  border-radius: 12px;\n  font-weight: bold;\n  font-size: 1.1em;\n}\n\n.no-words-message {\n  text-align: center;\n  color: #666;\n  padding: 40px;\n  font-size: 1.1em;\n}\n",document.head.appendChild(n);const t=document.createElement("button");t.className="text-extractor-button",t.textContent="Whaley",document.body.appendChild(t);const e=document.createElement("div");e.className="text-extractor-modal",e.innerHTML='\n  <span class="text-extractor-close">&times;</span>\n  <div class="text-extractor-content"></div>\n',document.body.appendChild(e);const o=e.querySelector(".text-extractor-close"),r=e.querySelector(".text-extractor-content");let a=0;async function i(){return document.body.innerText}async function s(){try{console.log("Starting translation...");const n=await i(),t=await async function(n,t){try{const e=(await chrome.runtime.sendMessage({action:"getApiKey"})).apiKey;if(!e)throw new Error("API key not found");const o=function(n){const t=n.match(/\b[\w']+\b/g)||[];return Array.from(new Set(t)).sort((()=>.5-Math.random())).slice(0,5)}(n);console.log("Words to translate:",o);const r=`Translate only these 5 words to ${t}: ${o.join(", ")}. \n                       Return ONLY a JSON object with the English words as keys and their ${t} translations as values.\n                       Example format: {"word1": "translation1", "word2": "translation2"}`,a=await fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"},body:JSON.stringify({model:"gpt-4",messages:[{role:"user",content:r}],temperature:.5})}),i=await a.json();if(!i.choices||!i.choices[0]||!i.choices[0].message)throw console.error("Unexpected API response:",i),new Error("Invalid API response structure");const s=i.choices[0].message.content;console.log("Translation response:",s);try{const n=JSON.parse(s);return console.log("Final translations:",n),n}catch(n){throw console.error("Error parsing translation response:",n),new Error("Invalid translation format received")}}catch(n){throw console.error("Translation error:",n),n}}(n,"French");console.log("Got translations:",t),function(n){if(!document.getElementById("translator-style")){const n=document.createElement("style");n.id="translator-style",n.textContent="\n            .translated-word {\n                color: black;\n                background-color: #E3F2FD; /* very light blue */\n                padding: 2px 6px;\n                border-radius: 12px;\n                cursor: pointer;\n                transition: all 0.3s ease;\n                position: relative;\n                display: inline-block;\n                margin: 0 2px;\n            }\n            .translated-word.click-1 {\n                background-color: #90CAF9; /* light blue */\n            }\n            .translated-word.click-2 {\n                background-color: #2196F3; /* medium blue */\n                color: white;\n            }\n            .translated-word.click-3 {\n                background-color: #4CAF50; /* green */\n                color: white;\n            }\n            .translated-word:hover::after {\n                content: attr(data-original);\n                position: absolute;\n                left: 50%;\n                transform: translateX(-50%);\n                bottom: 100%;\n                background: white;\n                color: black;\n                padding: 4px 8px;\n                border-radius: 15px;\n                font-size: 14px;\n                white-space: nowrap;\n                box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n                border: 1px solid #ddd;\n                z-index: 10001;\n                margin-bottom: 5px;\n            }\n        ",document.head.appendChild(n)}function t(n){const t=n.target;if(!t.classList.contains("translated-word"))return;const e=t.getAttribute("data-original");if(!e)return;const o=document.querySelectorAll(`.translated-word[data-original="${e}"]`),r=parseInt(t.getAttribute("data-clicks")||"0"),i=(r+1)%4,s=3===i&&2===r;o.forEach((n=>{n.classList.remove("click-1","click-2","click-3"),i>0&&n.classList.add(`click-${i}`),n.setAttribute("data-clicks",i.toString())})),s&&(a+=100,function(){const n=document.querySelector(".menu-header");n&&(n.textContent=`Points: ${a}`)}())}const e=document.createTreeWalker(document.body,NodeFilter.SHOW_TEXT,{acceptNode:n=>{const t=n.parentNode;return t&&("SCRIPT"===t.tagName||"STYLE"===t.tagName||t.classList.contains("translated-word"))?NodeFilter.FILTER_REJECT:NodeFilter.FILTER_ACCEPT}});let o;const r=[];for(;o=e.nextNode();)r.push(o);r.forEach((e=>{!function(e){let o=e.textContent||"";const r=document.createElement("div");let a=o;if(Object.entries(n).forEach((([n,t])=>{const e=new RegExp(`\\b${n}\\b`,"gi");a=a.replace(e,`<span class="translated-word" \n                      data-original="${n}" \n                      data-clicks="0">${t}</span>`)})),a!==o){r.innerHTML=a,r.querySelectorAll(".translated-word").forEach((n=>{n.addEventListener("click",t)}));const n=document.createDocumentFragment();for(;r.firstChild;)n.appendChild(r.firstChild);e.parentNode?.replaceChild(n,e)}}(e)}))}(t),r&&(r.textContent="Translation complete! Hover over blue text to see original words.")}catch(n){console.error("Translation failed:",n),r&&(r.textContent=`Translation failed: ${n instanceof Error?n.message:"Unknown error"}`)}}window.addEventListener("load",s),t.addEventListener("click",s),o?.addEventListener("click",(()=>{e.classList.remove("show")})),chrome.runtime.onMessage.addListener(((n,t,e)=>("extractText"===n.action&&e({text:i()}),!0)));const d=document.createElement("button");d.className="icon-button chat-button",d.innerHTML='\n    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">\n        <path d="M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"/>\n    </svg>\n',document.body.appendChild(d);const c=document.createElement("button");c.className="icon-button menu-button",c.innerHTML='\n    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">\n        <line x1="3" y1="12" x2="21" y2="12"></line>\n        <line x1="3" y1="6" x2="21" y2="6"></line>\n        <line x1="3" y1="18" x2="21" y2="18"></line>\n    </svg>\n',document.body.appendChild(c);const l=document.createElement("div");l.className="menu-modal",l.innerHTML=`\n    <div class="menu-header">\n        Points: ${a}\n    </div>\n    <div class="menu-button-container">\n        <button class="menu-option" id="word-bank">Word Bank</button>\n        <button class="menu-option" id="history">History</button>\n    </div>\n`,document.body.appendChild(l),c.addEventListener("click",(()=>{l.classList.toggle("show")})),document.addEventListener("click",(n=>{c.contains(n.target)||l.contains(n.target)||!l.classList.contains("show")||l.classList.remove("show")})),document.getElementById("word-bank")?.addEventListener("click",(()=>{console.log("Word Bank clicked")})),document.getElementById("history")?.addEventListener("click",(()=>{console.log("History clicked")}));const p=document.createElement("div");p.className="word-bank-modal",p.innerHTML='\n    <div class="word-bank-header">\n        Word Bank\n        <span class="word-bank-close">&times;</span>\n    </div>\n    <div class="word-bank-content">\n        <div class="word-bank-grid"></div>\n    </div>\n',document.body.appendChild(p),document.getElementById("word-bank")?.addEventListener("click",(()=>{(function(){const n=p.querySelector(".word-bank-grid");if(!n)return;const t=function(){const n=[];return document.querySelectorAll(".translated-word").forEach((t=>{if(t.classList.contains("click-3")){const e=t.getAttribute("data-original"),o=t.textContent;e&&o&&n.push([e,o])}})),[...new Set(n.map((n=>JSON.stringify(n))))].map((n=>JSON.parse(n)))}();0!==t.length?n.innerHTML=t.map((([n,t])=>`\n        <div class="word-pair">\n            <div class="original-word">${n}</div>\n            <div class="translated-word-display">${t}</div>\n        </div>\n    `)).join(""):n.innerHTML='\n            <div class="no-words-message">\n                No mastered words yet! Click on translated words three times to add them to your word bank.\n            </div>\n        '})(),p.classList.add("show"),l.classList.remove("show")})),p.querySelector(".word-bank-close")?.addEventListener("click",(()=>{p.classList.remove("show")})),document.addEventListener("click",(n=>{p.contains(n.target)||document.getElementById("word-bank")?.contains(n.target)||!p.classList.contains("show")||p.classList.remove("show")}))})();